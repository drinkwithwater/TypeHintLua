
const math = {}

function.nocheck math.abs(x:Number):Ret(Number)
end

function.nocheck math.acos(x:Number):Ret(Number)
end

function.nocheck math.asin(x:Number):Ret(Number)
end

function.nocheck math.atan(y:Number, x:OrNil(Number)):Ret(Number)
end

function.nocheck math.ceil(x:Number):Ret(Integer)
end

function.nocheck math.cos(x:Number):Ret(Number)
end

function.nocheck math.deg(x:Number):Ret(Number)
end

function.nocheck math.exp(x:Number):Ret(Number)
end

function.nocheck math.floor(x:Number):Ret(Integer)
end

function.nocheck math.fmod(x:Number, y:Number):Ret(Number)
end

math.huge = nil @! Literal(1.0/0.0)

function.nocheck math.log(x:Number, base:OrNil(Number)):Ret(Number)
    base = base or math.exp(1)
end

function.nocheck math.max(x:Number, ...:Number):Ret(Number)
end

math.maxinteger = nil@! Literal(9223372036854775807)

function.nocheck math.min(x:Number, ...:Number):Ret(Number)
end

math.mininteger = nil@! Literal(-9223372036854775808)

function.nocheck math.modf(x:Number):Ret(Integer, Number)
end

math.pi = 3.14159265358979323846

function.nocheck math.rad(x:Number):Ret(Number)
end

function.nocheck math.random(m:OrNil(Integer), n:OrNil(Integer)):Ret(Number)
end

function.nocheck math.randomseed(x:OrNil(Integer), y:OrNil(Integer))
end

function.nocheck math.sin(x:Number):Ret(Number)
end

function.nocheck math.sqrt(x:Number):Ret(Number)
end

function.nocheck math.tan(x:Number):Ret(Number)
end

function.nocheck math.tointeger(x:Any):Ret(OrNil(Integer))
end

function.open math.type(x):mapguard({float=Number, integer=Integer})
end

function.nocheck math.ult(m:Integer, n:Integer):Ret(Boolean)
end

_ENV.math = math

