
const r1 = require "thlua.runtime.DiagnosticRuntime"
const r2 = require "thlua.runtime.CompletionRuntime"
const node = require "thlua.code.Node"
const VisitorExtend = require "thlua.code.VisitorExtend"
const SymbolVisitor = require "thlua.code.SymbolVisitor"
const SlowServer = require "thlua.server.SlowServer"
const FastServer = require "thlua.server.FastServer"
const inject = require "test.inject"

(@do
	let.clazz=import("thlua.type.TypeClass").clazz
	let.node=import("thlua.code.Node").node
end)

--[[
(@do
	let.clazz=import("thlua.type.TypeClass").clazz
	clazz.BaseStack=Struct {
		error=Mfn():Dots(Truth):Ret(),
		warn=Mfn():Dots(Truth):Ret(),
		info=Mfn():Dots(Truth):Ret(),
	}
	clazz.RetTuples=Struct {
	}
	clazz.TypeTuple=Struct {
	}
end)
local Reference = require "thlua.refer.Reference"
-- local StringLiteral = require "thlua.type.StringLiteral"
local String = require "thlua.type.String"

]]
