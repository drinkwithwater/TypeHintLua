
const TestCase = require "test.TestCase"

TestCase.go([[
const function dosth(a) --E
end
dosth(321)
]])

TestCase.go([[
const function yes() end
const function dosth(...)
	yes(...)
end
dosth(321321) --E
dosth()
]])


TestCase.go([[
const function yes(a:Integer) end
const function dosth(...)
	yes(...)
end
dosth("fdsfs") --E
dosth(321)
]])

TestCase.go([[
const function yes(a:Integer, b:String) end
const function dosth(...)
	yes(...)
end
dosth("fdsfs", "fdsfs") --E
dosth(321, "fdsfsf")
]])

TestCase.go([[
const function yes(a:Integer, b:String) end
const function dosth(...)
	yes(321, ...)
end
dosth(321, "fdsfs") --E
dosth("fdsfs")
]])

TestCase.go([[
const function yes(a:Integer, b:String) end
const function dosth(...) --E
	yes(..., "fdsfs")
end
dosth(321)
]])

TestCase.go([[
const function yes(a:Integer, b:String) end
const function dosth(...)
	yes(..., "fdsfs")
	yes(...)
end
dosth(321) --E
dosth(321, "fsfsd")
]])

TestCase.go([[
const function.open openNoDots(a,b)
	a(b)
end

const function auto1(a)
	openNoDots(function(a:Integer) end, a)
end
auto1(321)
auto1("fdsfds") --E

const function auto2(...)
	openNoDots(function(a:Integer) end, ...)
end
auto2(321)
auto2("fdsfds") --E

const function auto3(a, ...)
	openNoDots(function(a:Integer) end, a, ...)
end
auto3(321)
auto3("fdsfds") --E
]])


TestCase.go([[
const function.open openNoDots(a,b)
	a(b) --E
end
const function auto1(a, ...)
	openNoDots(function(a:Integer, b:Integer) end, a, ...)
end
auto1(321)
auto1("fdsfds") --E

]])

