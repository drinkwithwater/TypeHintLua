
const class = require "thlua.class"

(@do
	let.clazz = import("thlua.type.TypeClass").clazz
	let.node = import("thlua.code.Node").node
end)

local Exception = class("Exception")
Exception.__index=Exception
Exception.__tostring=function(t)
	return "Exception:"..tostring(t.node)..":"..t.msg
end

function.open Exception:ctor(vMsg:String, vNode:OrNil(clazz.IAstNode, False))
	self.msg = tostring(vMsg)
	self.node = vNode
end

function Exception:fixNode(vNode:node.IAstNode)
	if not self.node then
		self.node = vNode
	end
end

return Exception
