
const class = require "thlua.class"
const AssignContext = require "thlua.context.AssignContext"
const TypedFunction = require "thlua.type.func.TypedFunction"

(@do
	let.clazz = import("thlua.type.basic.TypeClass").clazz
end)

const ReturnContext = class@<clazz.ReturnContext, false>(AssignContext)

function.open ReturnContext:ctor(...)
end

function ReturnContext:returnMatchTuples(
	vSrcTuple:clazz.UTypeTuple,
	vRetTuples:clazz.RetTuples
):Ret(False):Ret(True, Boolean)
	const nAutoFnCastDict = self:newAutoFnCastDict()
	local nOneMatchSucc = false
	local nOneCastSucc = false
	vRetTuples:foreachWithFirst(function(vDstTuple, _)
		const nMatchSucc, nCastSucc = self:tryMatchCast(nAutoFnCastDict, vSrcTuple, vDstTuple)
		if nMatchSucc then
			nOneMatchSucc = true
			if nCastSucc then
				nOneCastSucc = true
			end
		end
	end)
	if nOneMatchSucc then
		self:runLateCast(nAutoFnCastDict)
		return true, nOneCastSucc
	else
		return false
	end
end

function ReturnContext:tryMatchCast(
	vAutoFnCastDict:clazz.AutoFnCastDict,
	vSrcTuple:clazz.UTypeTuple,
	vDstTuple:clazz.UTypeTuple
):Ret(False):Ret(True, Boolean)
	local nCastResult = true
	for i=1, #vSrcTuple do
		const nDstType = vDstTuple:get(i):checkAtomUnion()
		const nSrcType = vSrcTuple:get(i):checkAtomUnion()
		const nIncludeType, nCastSucc = self:tryIncludeCast(vAutoFnCastDict, nDstType, nSrcType)
		if not nIncludeType then
			return false
		else
			nCastResult = nCastResult and nCastSucc
		end
	end
	for i=#vSrcTuple + 1, #vDstTuple do
		const nDstType = vDstTuple:get(i):checkAtomUnion()
		const nSrcType = vSrcTuple:get(i):checkAtomUnion()
		const nIncludeType, nCastSucc = self:tryIncludeCast(vAutoFnCastDict, nDstType, nSrcType)
		if not nIncludeType then
			return false
		else
			nCastResult = nCastResult and nCastSucc
		end
	end
	const nSrcRepeatType = vSrcTuple:getRepeatType()
	if nSrcRepeatType then
		const nDstRepeatType = vDstTuple:getRepeatType()
		if not nDstRepeatType then
			return false
		elseif not nDstRepeatType:includeAll(nSrcRepeatType) then
			return false
		end
	end
	return true, nCastResult
end

return ReturnContext
