
(@let.class = import("thlua.type.TypeClass").class)

local function FnComClass()::open()
	local FnCom = {}
	FnCom.__index = FnCom
	function FnCom:regionTableNew?(vContext, vNode)::Ret(class.LuaTable):nocheck()
		error("only fn with RetNew can take New()")
	end
	function FnCom:regionReturn?(vContext, vNode, vTypeTuple)::Ret()
		error("return not implement")
	end
	function FnCom:regionEnd?(vContext, vNode, vTermTupleList)::Ret():Ret(class.TermTuple)
		-- do nothing
	end
	function FnCom:cast?(vContext, vTypeFn)::Ret(Boolean)
		return false
	end
	return FnCom
end

return FnComClass
