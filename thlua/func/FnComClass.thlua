
(@do
	let.class = import("thlua.type.TypeClass").class
	class.UFnCom = Union(class.LateFnCom, class.ClassReferCom)
	class.IFnCom = Interface {
		matchTypeFn=member:Fn(class.Context, class.UTypeTuple):Ret(class.TypeFunction)
	}
end)


const function.open FnComClass()
	const FnCom = {}
	FnCom.__index = FnCom
	function.pass FnCom:matchTypeFn?(vContext, vTypeTuple)
		error("match type fn not implement")
	end
	return FnCom
end

return FnComClass
