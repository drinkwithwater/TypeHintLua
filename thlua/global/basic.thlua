return [[

_ENV._G = _ENV

_ENV._VERSION = "" @ String

-- builtin
-- _ENV.assert = nil

function.nocheck _ENV.collectgarbage(
    opt:OrNil("collect", "stop", "restart", "count", "step", "isrunning", "incremental", "generational"),
    arg:OrNil(Integer)
)
end


function.nocheck _ENV.loadfile(name:String, mode:OrNil(String), env:OrNil(Truth)):Ret(AnyFunction):Ret(Nil, String)
end

function.nocheck _ENV.load(chunk:String, name:String, mode:OrNil(String), env:OrNil(Truth)):Ret(AnyFunction):Ret(Nil, String)
end

-- builtin
-- _ENV.error = nil

-- builtin
-- _ENV.dofile = nil

-- builtin
-- _ENV.getmetatable = nil

-- builtin
-- _ENV.ipair = nil

-- builtin
-- _ENV.next = nil

-- builtin
-- _ENV.pairs = nil

-- builtin
-- _ENV.pcall = nil

-- builtin
-- _ENV.pcall = nil


function.open _ENV.tonumber(v:Any, base)
    return 0.0@OrNil(Number)
end

function.nocheck _ENV.tostring(v:Any):Ret(String)
end

function.nocheck _ENV.print(...:Any)
end

function.nocheck _ENV.rawset(a:Any, b:Any,c:Any)
end

]]