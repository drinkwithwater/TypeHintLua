
const BaseRuntime = require "thlua.runtime.BaseRuntime"
const class = require "thlua.class"

(@let.clazz=import("thlua.type.TypeClass").clazz)

const CompletionRuntime = class@<clazz.CompletionRuntime, false>(BaseRuntime)

function.open CompletionRuntime:ctor(...)
	self._focusNodeSet = {} @ Dict(clazz.IAstNode, True)
end

function CompletionRuntime:getFocusNodeSet():Ret(OrFalse(Dict(clazz.IAstNode, True)))
	return self._focusNodeSet
end

function CompletionRuntime:focusNodeSet(vNodeSet:Dict(clazz.IAstNode, True))
	const nSet = self._focusNodeSet
	for k,v in pairs(vNodeSet) do
		nSet[k] = v
	end
end

return CompletionRuntime
