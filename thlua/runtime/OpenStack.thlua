
const class = require "thlua.class"
const InstStack = require "thlua.runtime.InstStack"

(@do
	let.clazz = import("thlua.type.TypeClass").clazz
end)

const OpenStack = class@<clazz.OpenStack, false>(InstStack)

function.open OpenStack:ctor(
	vRuntime:clazz.Runtime,
	vApplyNode:clazz.IAstNode,
	vUpValueCase:OrFalse(clazz.VariableCase),
	vParentStack:clazz.BaseStack,
	vBodyFn:clazz.OpenFunction
)
	self._parentStack = vParentStack
	self._bodyFn = vBodyFn
end

function OpenStack:getSealStack():Ret(clazz.SealStack)
	return self._parentStack:getSealStack()
end

function OpenStack:getParentStack():Ret(clazz.BaseStack)
	return self._parentStack
end

return OpenStack
