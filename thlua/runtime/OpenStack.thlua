
const class = require "thlua.class"
const InstStack = require "thlua.runtime.InstStack"

(@do
	let.clazz = import("thlua.type.TypeClass").clazz
end)

const OpenStack = class@<clazz.OpenStack, false>(InstStack)

function.open OpenStack:ctor(
	vRuntime:clazz.BaseRuntime,
	vNode:clazz.IAstNode,
	vUpState:OrFalse(clazz.LexState),
	vBodyFn:clazz.OpenFunction,
	vApplyStack:clazz.BaseStack
)
	self._applyStack = vApplyStack
	self._bodyFn = vBodyFn
end

function OpenStack:getSealStack():Ret(clazz.SealStack)
	return self._applyStack:getSealStack()
end

function OpenStack:getApplyStack():Ret(clazz.BaseStack)
	return self._applyStack
end

return OpenStack
