
(@let.lsp=import("thlua.server.protocol").lsp)

return function(vServer:lsp.BaseServer, vParams:lsp.InitializeParams):Ret(lsp.InitializeResult)
	if vServer.initialize then
		error("already initialized!")
	else
		vServer.initialize = true
	end
	const rootUri = vParams.rootUri
	const root  = vParams.rootPath or (rootUri and vServer:uriToPath(rootUri))
	vServer:info("Config.root = ", root, vParams.rootPath, vParams.rootUri)
	vServer:info("Platform = ", vServer:getPlatform())
	if root then
		vServer:setRoot(root)
	end
	return {
		capabilities = {
			textDocumentSync = {
				openClose = true,
				change = 1, -- 1 is non-incremental, 2 is incremental
				save = { includeText = true },
			},
			definitionProvider = true,
			hoverProvider = true,
			completionProvider = {
				triggerCharacters = {".",":"},
				resolveProvider = false
			},
			referencesProvider = true,
			documentLocalSymbolProvider = false,
			--documentHighlightProvider = false,
			--workspaceLocalSymbolProvider = false,
			--codeActionProvider = false,
			--documentFormattingProvider = false,
			--documentRangeFormattingProvider = false,
			--renameProvider = false,
		},
	}
end
