
const SymbolShot = {}
SymbolShot.__index=SymbolShot
SymbolShot.__tostring=function(self)
	return tostring(next(self._symbolSet))
end

(@let.class = import("thlua.type.TypeClass").class)

function SymbolShot.new(vType:class.UAtomUnion)::RetClass(class.SymbolShot)
	return setmetatable({::Self()
		_type=vType,
		_symbolSet={} @ Dict(class.LocalSymbol, True),
	}, SymbolShot)
end

function SymbolShot:addSymbol(vSymbol:class.LocalSymbol)
	self._symbolSet[vSymbol] = true
end

function SymbolShot:getType()::Ret(class.UAtomUnion)
	return self._type
end

return SymbolShot
