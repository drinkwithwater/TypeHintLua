
(@let.StringToString = Dict (String, String))

const comparison:StringToString = {
	[">"]="__lt",
	["<"]="__lt",
	[">="]="__le",
	["<="]="__le",
}

const mathematic:StringToString = {
	["+"]="__add",
	["-"]="__sub",
	["*"]="__mul",
	["/"]="__div",
	["//"]="__idiv",
	["%"]="__mod",
	["^"]="__pow",
}

const bitwise:StringToString = {
	["&"]="__band",
	["|"]="__bor",
	["~"]="__bxor",
	["<<"]="__shr",
	[">>"]="__shl",
}

const uopNoLen:StringToString = {
	["-"]="__unm",
	["~"]="__bnot"
}

const bopNoEq:StringToString = {
	[".."]="__concat"
}

for k,v in pairs(comparison) do
	bopNoEq[k] = v
end

for k,v in pairs(bitwise) do
	bopNoEq[k] = v
end

for k,v in pairs(mathematic) do
	bopNoEq[k] = v
end

return {
	bitwise=bitwise,
	mathematic=mathematic,
	comparison=comparison,
	bopNoEq=bopNoEq,
	uopNoLen=uopNoLen,
}
