
const TYPE_BITS = require "thlua.type.TYPE_BITS"

const BaseAtomType = require "thlua.type.basic.BaseAtomType"
const class = require "thlua.class"

(@let.clazz = import($class).clazz)

const Nil = class@<clazz.Nil, false>(BaseAtomType)

function.open Nil:ctor(vManager:clazz.TypeManager)
	self.bits=TYPE_BITS.NIL
end

function Nil:detailString(v, vVerbose)
	return "Nil"
end

function Nil:native_getmetatable(vContext)
	return self._manager.type.Nil
end

function Nil:native_type()
	return self._manager:Literal("nil")
end

function Nil:isSingleton()
	return true
end

function Nil:trueType()
	return self._manager.type.Never
end

function Nil:falseType()
	return self
end

function Nil:isNilable()
	return true
end

function Nil:notnilType()
	return self._manager.type.Never
end

return Nil
