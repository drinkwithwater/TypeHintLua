
const TYPE_BITS = require "thlua.type.TYPE_BITS"
const BaseAtomType = require "thlua.type.basic.BaseAtomType"
const class = require "thlua.class"

(@let.clazz = import($class).clazz)

const Thread = class@<clazz.Thread, false>(BaseAtomType)

function.open Thread:ctor(vManager:clazz.TypeManager)
	self.bits = TYPE_BITS.THREAD
end

function Thread:detailString(vVerbose:Boolean)
	return "Thread"
end

function Thread:native_getmetatable(vContext)
	return self._typeManager.type.Nil
end

function Thread:native_type()
	return self._typeManager:Literal("thread")
end

function Thread:isSingleton()
	return false
end

return Thread
